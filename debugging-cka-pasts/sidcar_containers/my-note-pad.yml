apiVersion: v1
kind: Pod
metadata:
  name: counter
spec:
  containers:
  - name: count
    image: busybox
    args:
    - /bin/sh
    - -c
    - >
      i=0;
      while true;
      do
        echo "$i: $(date)" >> /var/log/1.log;
        echo "$(date) INFO $i" >> /var/log/2.log;
        i=$((i+1));
        sleep 1;
      done
    volumeMounts:
    - name: varlog
      mountPath: /var/log
  # - name: count-log-1
  #   image: busybox
  #   args: [/bin/sh, -c, 'tail -n+1 -f /var/log/1.log']
  #   volumeMounts:
  #   - name: varlog
  #     mountPath: /var/log
  # - name: count-log-2
  #   image: busybox
  #   args: [/bin/sh, -c, 'tail -n+1 -f /var/log/2.log']
  #   volumeMounts:
  #   - name: varlog
  #     mountPath: /var/log
  volumes:
  - name: varlog
    emptyDir: {}
####################
apiVersion: v1
kind: Pod
metadata:
  name: big-corp-app05
spec:
  containers:
  - name: count
    image: busybox
    args:
    - /bin/sh
    - -c
    - >
      i=0;
      while true;
      do
        echo "$i: $(date)" >> /var/log/1.log;
        sleep 1;
      done
    volumeMounts:
    - name: varlog
      mountPath: /var/log
  - name: count-log-1
    image: busybox
    args: [/bin/sh, -c, 'tail -n+1 -f /var/log/1.log']
    volumeMounts:
    - name: varlog
      mountPath: /var/log
  volumes:
  - name: varlog
    emptyDir: {}
########################
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: big-corp-app
  name: big-corp-app
  namespace: default
spec:
# Init container fo creating the log directory and file
# on the emptyDir volume, which will be passed to the containers
  initContainers:
  - name: create-log-file
    image: busybox
    command:
      - sh
      - -c
      - |
          #!/bin/sh
          mkdir -p /var/log/k8slog
          touch /var/log/k8slog/application.log
# Mount varlog volume to the Init container
    volumeMounts:
    - name: varlog
      mountPath: /var/log

  containers:
  - image: kodekloud/event-simulator
    imagePullPolicy: Always
    name: simple-webapp
    command:
      - sh
      - -c
      - |
          i=0
          while true; do
            echo "$i: $(date)" >> /var/log/k8slog/application.log
            echo "$(date) INFO $i"
            i=$((i+1))
          sleep 1
          done
# Mount varlog volume to simple-webapp container
    volumeMounts:
    - name: varlog
      mountPath: /var/log
  - name: sidecar
    image: busybox
    command:
      - sh
      - -c
      - |
          tail -n+1 -f /var/log/k8slog/application.log
# Mount varlog volume to count-log-1 container
    volumeMounts:
    - name: varlog
      mountPath: /var/log

# Define na emptyDir shared volume
  volumes:
  - name: varlog
    emptyDir: {}
###################apiVersion: v1
apiVersion: v1
kind: Pod
metadata:
  labels:
    name: webapp-1
  name: webapp-1
  namespace: default

spec:
# Init container fo creating the log directory and file
# on the emptyDir volume, which will be passed to the containers
  initContainers:
  - name: create-log-file
    image: busybox
    command:
      - sh
      - -c
      - |
          #!/bin/sh
          mkdir -p /var/log/k8slog
          touch /var/log/k8slog/application.log
# Mount varlog volume to the Init container
    volumeMounts:
    - name: varlog
      mountPath: /var/log

  containers:
  - image: kodekloud/event-simulator
    imagePullPolicy: Always
    name: simple-webapp
    command:
      - sh
      - -c
      - |
          i=0
          while true; do
            echo "$i: $(date)" >> /var/log/k8slog/application.log
            echo "$(date) INFO $i"
            i=$((i+1))
          sleep 1
          done
# Mount varlog volume to simple-webapp container
    volumeMounts:
    - name: varlog
      mountPath: /var/log
  - name: count-log-1
    image: busybox
    command:
      - sh
      - -c
      - |
          tail -f -n 1 /var/log/k8slog/application.log
# Mount varlog volume to count-log-1 container
    volumeMounts:
    - name: varlog
      mountPath: /var/log

#Define na emptyDir shared volume
  volumes:
  - name: varlog
    emptyDir: {}
  volumes:
    - name: varlog
      persistentVolumeClaim:
        claimName: myclaim
######################################
apiVersion: v1
kind: Pod
metadata:
  name: kucci
spec:
  volumes:
  - name: html
    emptyDir: {}
  containers:
  - name: 1st
    image: nginx
    volumeMounts:
    - name: html
      mountPath: /usr/share/nginx/html
  - name: 2nd
    image: redis
    volumeMounts:
    - name: html
      mountPath: /html
    command: ["/bin/sh", "-c"]
    args:
      - while true; do
          date >> /html/index.html;
          sleep 1;
        done
###################
apiVersion: v1
kind: Pod
metadata:
  name: kucc1
spec:
  containers:
  - image: nginx
    name: nginx-image
    volumeMounts:
    - mountPath: /cache
      name: cache-volume
  - image: redis
    name: redis-image
    volumeMounts:
    - mountPath: /cache
      name: cache-volume
  volumes:
  - name: cache-volume
    emptyDir: {}
#######################################
